# tasks file
---
- name: install dependencies
  ansible.builtin.apt:
    name: "{{ siege_dependencies }}"
    state: "{{ apt_install_state | default('latest') }}"
    update_cache: true
    cache_valid_time: "{{ apt_update_cache_valid_time | default(3600) }}"
  tags:
    - configuration
    - siege
    - siege-install
    - siege-install-dependencies

- name: remove (distro version)
  ansible.builtin.apt:
    name: siege
    state: absent
    purge: true
  when: siege_remove_distro_version
  tags:
    - configuration
    - siege
    - siege-remove
    - siege-remove-distro

- name: create (download) directory
  ansible.builtin.file:
    path: "{{ siege_download_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - configuration
    - siege
    - siege-install
    - siege-install-download

- name: download (latest)
  ansible.builtin.get_url:
    url: "{{ siege_download_url }}"
    dest: "{{ siege_download_path }}/{{ siege_download_url | basename }}"
    owner: root
    group: root
    mode: 0644
    force: true
  tags:
    - configuration
    - siege
    - siege-install
    - siege-install-download

- name: create (build) directory
  ansible.builtin.file:
    path: "{{ siege_build_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - configuration
    - siege
    - siege-install
    - siege-install-build

- name: version check  # noqa command-instead-of-module, risky-shell-pipe
  ansible.builtin.shell: >
    tar -ztf {{ siege_download_path }}/{{ siege_download_url | basename }} | head -n 1
  changed_when: false
  register: _version_check
  tags:
    - configuration
    - siege
    - siege-install
    - siege-install-build

- name: extract
  ansible.builtin.unarchive:
    src: "{{ siege_download_path }}/{{ siege_download_url | basename }}"
    dest: "{{ siege_build_path }}"
    creates: "{{ siege_build_path }}/{{ _version_check.stdout }}"
    copy: false
  register: _result
  tags:
    - configuration
    - siege
    - siege-install
    - siege-install-build

- name: configure
  ansible.builtin.command: >
    ./configure
  args:
    chdir: "{{ siege_build_path }}/{{ _version_check.stdout }}"
  changed_when: true
  when: _result is changed
  tags:
    - configuration
    - siege
    - siege-install
    - siege-install-build
    - siege-install-build-configure

- name: make
  ansible.builtin.command: >
    make
  args:
    chdir: "{{ siege_build_path }}/{{ _version_check.stdout }}"
  changed_when: true
  when: _result is changed
  tags:
    - configuration
    - siege
    - siege-install
    - siege-install-build
    - siege-install-build-make

- name: make install
  ansible.builtin.command: >
    make install
  args:
    chdir: "{{ siege_build_path }}/{{ _version_check.stdout }}"
  changed_when: true
  when: _result is changed
  tags:
    - configuration
    - siege
    - siege-install
    - siege-install-build
    - siege-install-build-make-install

- name: create configuration file
  ansible.builtin.template:
    src: usr/local/etc/siegerc.j2
    dest: "{{ '/etc/siegerc' if ansible_distribution_release in ['lucid', 'squeeze'] else '/usr/local/etc/siegerc' }}"
    owner: root
    group: root
    mode: 0644
  tags:
    - configuration
    - siege
    - siege-configuration
